//
//  MemoGameViewModel.swift
//  CoreProject
//
//  Created by Pawe≈Ç Powro≈∫nik on 04/12/2024.
//

 
import SwiftUI

class MemoGameViewModel: ObservableObject {
    private static var currentEmoijs = ["ü¶ä","üêß","ü¶ô","üêò","üê´","üêä","üê†","ü¶ë","ü¶ê","ü¶ß","üêÑ","üêñ"]
    
    @Published private(set) var model = createMemoryGame()
    private static let defaultGameDuration = 30
    // MARK: - Konstruktor
    private static func createMemoryGame() -> MemoGameModel<String> {
        
        return MemoGameModel<String>(numberOfCards: currentEmoijs.count,
                                     cardContentFactory: { index in
                                         if (currentEmoijs.indices.contains(index)) {
                                             return currentEmoijs[index]
                                         } else {
                                             return "‚Åá"
                                         }
                                     },
                                     gameDuration: defaultGameDuration)
    }
    
    var cards: Array<MemoGameModel<String>.Card> {
        return model.cards
    }
    
    // Kolor g≈Ç√≥wny aplikacji
    var gameColor: Color {
        .blue
    }
    
    // MARK: - Intends
    
    func getMainCard() -> MemoGameModel<String>.Card? {
        return model.mainCard
    }
    
    // Wywo≈Çywane po onTapGesture w ContentView
    func choose(_ card: MemoGameModel<String>.Card) {
        model.choose(card)
    }
    
    func shuffle() {
        model.shuffle()
    }
}
